name: "Ops Terra EKS IaaC"
on:
    push:
        branches:
            - prod
            - dev
        paths:
            - terraform/**
    pull_request:
        branches:
            - prod
        paths:
            - terraform/**

env:
    AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY}}
    AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
    AWS_BUCKET_TF_STATE: ${{secrets.AWS_BUCKET_TF_STATE}}
    AWS_REGION: us-east-1
    EKS_CLUSTER: GitOps-eks

jobs:
    terraform:
        name: "Terraform code change applied"
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: bash
                working-directory: ./terraform

        steps:
            - name: Source code checkout
              uses: actions/checkout@v4

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                terraform_version: 1.4.6

            - name: Terraform init
              id: terra_init
              run: terraform init -backend-config="bucket=$AWS_BUCKET_TF_STATE"

            - name: Terraform format
              id: terra_fmt
              run: terraform fmt -check

            - name: Terraform validate
              id: terra_validate
              run: terraform validate

            - name: Terraform plan
              id: terra_plan
              run: terraform plan -no-color -input=false -out planfile
              continue-on-error: true

            - name: Terraform plan status
              if: steps.terra_plan.outcome == 'failure'
              run: exit 1

            - name: Terraform apply
              id: terra_apply
              if: github.ref == 'refs/heads/prod' && github.event_name == 'push'
              run: terraform apply -auto-approve -input=false -parallelism=1 planfile

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{secrets.AWS_ACCESS_KEY}}
                aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
                aws-region: us-east-1

            - name: Get Kube config file
              id: getconfig
              if: steps.terra_apply.outcome == 'success'
              run: aws eks update-kubeconfig --region ${{env.AWS_REGION}} --name ${{env.EKS_CLUSTER}}

            - name: Install Ingress controller
              if: steps.terra_apply.outcome == 'success' && steps.getconfig.outcome == 'success'
              run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.3/deploy/static/provider/aws/deploy.yaml}